<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.scheduling.support.CronTriggerTests" tests="112" skipped="0" failures="0" errors="0" timestamp="2023-03-20T07:42:39" hostname="DESKTOP-VGJP1PJ" time="0.273">
  <properties/>
  <testcase name="testSundayIsZero(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.002"/>
  <testcase name="testSundayIsZero(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondIncrementer(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondIncrementer(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthSequence(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.002"/>
  <testcase name="testMonthSequence(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.002"/>
  <testcase name="testDayNames(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDayNames(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDailyTriggerOnDaylightSavingBoundary(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDailyTriggerOnDaylightSavingBoundary(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.002"/>
  <testcase name="testMonthlyTriggerInLongMonth(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthlyTriggerInLongMonth(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfWeekAndRollover(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfWeekAndRollover(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testWeekDaySequence(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testWeekDaySequence(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDaylightSavingMissingHour(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDaylightSavingMissingHour(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfMonthAndRollover(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfMonthAndRollover(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testLeapYearSpecificDate(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testLeapYearSpecificDate(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDayRangeInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDayRangeInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayOfMonthInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDayOfMonthInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementSecondByOne(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementSecondByOne(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfMonth(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfMonth(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSecondIncrementerWithRange(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSecondIncrementerWithRange(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSundaySynonym(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSundaySynonym(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMinuteInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.007"/>
  <testcase name="testMinuteInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.002"/>
  <testcase name="testMonthRangeInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.004"/>
  <testcase name="testMonthRangeInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementSecondAndRollover(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementSecondAndRollover(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfWeekByOne(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfWeekByOne(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDailyTriggerInShortMonth(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.007"/>
  <testcase name="testDailyTriggerInShortMonth(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testNonExistentSpecificDate(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.032"/>
  <testcase name="testNonExistentSpecificDate(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.019"/>
  <testcase name="testIncrementSecondWithPreviousExecutionTooEarly(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementSecondWithPreviousExecutionTooEarly(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testWhitespace(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testWhitespace(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSecondRange(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondRange(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinute(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementMinute(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSpecificHourSecond(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificHourSecond(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSpecificDate(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificDate(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMatchSpecificSecond(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMatchSpecificSecond(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testHourInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testHourInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementMinuteByOne(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinuteByOne(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMonth(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementMonth(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testHourRangeInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testHourRangeInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMinuteRangeInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMinuteRangeInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfMonthByOne(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfMonthByOne(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinuteAndRollover(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementMinuteAndRollover(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.002"/>
  <testcase name="testMatchAll(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMatchAll(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSpecificMinuteHour(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificMinuteHour(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMatchLastSecond(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMatchLastSecond(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSecondInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSecondInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSpecificMinuteSecond(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSpecificMinuteSecond(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSpecificDayOfMonthSecond(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificDayOfMonthSecond(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementHour(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementHour(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthlyTriggerInShortMonth(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthlyTriggerInShortMonth(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthInvalidTooSmall(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthInvalidTooSmall(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementMonthAndRollover(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementMonthAndRollover(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.002"/>
  <testcase name="testDayInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthNamesMixedCase(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthNamesMixedCase(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayOfWeekIndifferent(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDayOfWeekIndifferent(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthNames(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthNames(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDailyTriggerInLongMonth(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDailyTriggerInLongMonth(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSecondRangeInvalid(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSecondRangeInvalid(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testHourIncrementer(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testHourIncrementer(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementHourAndRollover(LocalDateTime, TimeZone)[1]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementHourAndRollover(LocalDateTime, TimeZone)[2]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
