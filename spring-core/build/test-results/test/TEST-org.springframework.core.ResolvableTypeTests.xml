<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.core.ResolvableTypeTests" tests="135" skipped="0" failures="0" errors="0" timestamp="2023-03-20T07:38:34" hostname="DESKTOP-VGJP1PJ" time="0.713">
  <properties/>
  <testcase name="resolveClassType()" classname="org.springframework.core.ResolvableTypeTests" time="0.267"/>
  <testcase name="resolveTypeVariableFromMethodReturn()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="asNotFound()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="typeVariableType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveWildcardLowerBounds()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getInterfaces()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="arrayClassType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveGenericMultiArrayType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="genericOfGenericWithAs()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="spr11219()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="spr12701()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="spr14648()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="spr16456()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromMethodReturnWithImplementsClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="forConstructorParameterMustNotBeNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forRawClassWithNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="wildcardType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveTypeVariableFromSuperType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="getGenericOfGenericByIndexes()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromTypeWithVariableResolver()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveFromOuterClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="forClassWithNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="forMethodReturnMustNotBeNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromSimpleCollectionInterfaceType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveBoundedTypeVariableResult()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="asFromInheritedInterface()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="getGenericsFromClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveGenericArrayType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="asSelf()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="doesResolveFromOuterOwner()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveTypeVariableFromMethodParameterTypeWithImplementsType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromMethodParameterType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveParameterizedType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveVariableFromFieldType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forMethodParameterWithNestingAndLevels()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveVariableGenericArrayUnknown()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="forMethodParameterByIndexMustNotBeNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeWithCustomVariableResolver()" classname="org.springframework.core.ResolvableTypeTests" time="0.149"/>
  <testcase name="narrow()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="nested()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="isAssignableFromForClassAndClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="hasUnresolvableGenericsWhenImplementesRawInterface()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveVariableGenericArray()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="hasUnresolvableGenericsWhenExtends()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="isAssignableFromMustNotBeNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getComponentTypeForVariableThatResolvesToGenericArray()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveWildcardTypeUpperBounds()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromSimpleCollectionSuperclassType()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="classWithGenericsAs()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getComponentTypeForGenericArrayType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="hasUnresolvableGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="isAssignableFromForComplexWildcards()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="asCollection()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveUnknownTypeVariableFromConstructorParameter()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="serialize()" classname="org.springframework.core.ResolvableTypeTests" time="0.041"/>
  <testcase name="forClassWithMismatchedGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.004"/>
  <testcase name="canResolveVoid()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="resolveGenericArrayFromGeneric()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="hasUnresolvableGenericsWhenSelfNotResolvable()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forInstanceMustNotBeNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromConstructorParameterWithImplementsClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="isAssignableFromForNone()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="getSuperType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveVariableGenericArrayUnknownWithFallback()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="noInterfaces()" classname="org.springframework.core.ResolvableTypeTests" time="0.023"/>
  <testcase name="resolveTypeVariableFromReflectiveParameterizedTypeReference()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveBoundedTypeVariableWildcardResult()" classname="org.springframework.core.ResolvableTypeTests" time="0.021"/>
  <testcase name="forArrayComponent()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forClassWithGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.003"/>
  <testcase name="forMethodParameter()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forMethodParameterMustNotBeNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="hasUnresolvableGenericsBasedOnOwnGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="classType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="asMap()" classname="org.springframework.core.ResolvableTypeTests" time="0.005"/>
  <testcase name="resolveFromClassWithGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getResolvedGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromFieldTypeWithImplementsType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromMethodParameterWithImplementsClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forMethodParameterByIndex()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="forInstanceNoProvider()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="hasGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="hashCodeAndEquals()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="forField()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="noGetGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="asFromSuperType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getGenericOutOfBounds()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveTypeVariableFromConstructorParameter()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="isAssignableFromCannotBeResolved()" classname="org.springframework.core.ResolvableTypeTests" time="0.01"/>
  <testcase name="resolveTypeVariableFromClassWithImplementsClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="toStrings()" classname="org.springframework.core.ResolvableTypeTests" time="0.028"/>
  <testcase name="getSource()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getGenericByIndex()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="nestedWithArray()" classname="org.springframework.core.ResolvableTypeTests" time="0.004"/>
  <testcase name="forMethodReturn()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forInstanceProvider()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="forPrivateField()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveTypeVariableFromMethodParameter()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="getGeneric()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveVariableFromInheritedField()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getGenericsFromParameterizedType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forInstanceProviderNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="noneReturnValues()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="noSuperType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="isAssignableFromForSameClassNonExtendsGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="asFromInterface()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="isAssignableFromForArrays()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="javaDocSample()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromFieldTypeWithImplementsClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="parameterizedType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="isAssignableFromForDifferentClassesWithGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="resolveTypeVariableFromMethodParameterTypeWithImplementsClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromSimpleSuperclassType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveTypeVariableFromDeclaredParameterizedTypeReference()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="forRawClassAssignableFromTypeVariable()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="forRawClass()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveArrayClassType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="isAssignableFromForSameClassExtendsGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="isAssignableFromForWildcards()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="forConstructorParameter()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="forMethodParameterWithSameSignatureAndGenerics()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getComponentTypeForNonArray()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveVariableFromFieldTypeUnknown()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="genericArrayType()" classname="org.springframework.core.ResolvableTypeTests" time="0.002"/>
  <testcase name="asFromInheritedSuperType()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forMethodParameterWithNesting()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveTypeVariableFromSimpleInterfaceType()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="resolveVariableNotFound()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="forFieldMustNotBeNull()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getComponentTypeForClassArray()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <testcase name="isAssignableFromForClassAndSimpleVariable()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="nestedWithIndexes()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="getGenericOfGeneric()" classname="org.springframework.core.ResolvableTypeTests" time="0.001"/>
  <testcase name="resolveVariableFromInheritedFieldSwitched()" classname="org.springframework.core.ResolvableTypeTests" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
