<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.core.io.buffer.DataBufferTests" tests="228" skipped="0" failures="0" errors="0" timestamp="2023-03-20T07:38:16" hostname="DESKTOP-VGJP1PJ" time="0.849">
  <properties/>
  <testcase name="emptyAsByteBuffer(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.024"/>
  <testcase name="emptyAsByteBuffer(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="emptyAsByteBuffer(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.003"/>
  <testcase name="emptyAsByteBuffer(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.004"/>
  <testcase name="emptyAsByteBuffer(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="emptyAsByteBuffer(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeNullCharset(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeNullCharset(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeNullCharset(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeNullCharset(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeNullCharset(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.003"/>
  <testcase name="writeNullCharset(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="spr16351(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="spr16351(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="spr16351(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="spr16351(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="spr16351(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="spr16351(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="decreaseCapacityHighReadPosition(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.045"/>
  <testcase name="decreaseCapacityHighReadPosition(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="decreaseCapacityHighReadPosition(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="decreaseCapacityHighReadPosition(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.019"/>
  <testcase name="decreaseCapacityHighReadPosition(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="decreaseCapacityHighReadPosition(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeIsoString(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writeIsoString(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeIsoString(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeIsoString(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeIsoString(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeIsoString(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writePositionSmallerThanReadPosition(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writePositionSmallerThanReadPosition(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writePositionSmallerThanReadPosition(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writePositionSmallerThanReadPosition(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writePositionSmallerThanReadPosition(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writePositionSmallerThanReadPosition(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="expand(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.004"/>
  <testcase name="expand(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="expand(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="expand(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.023"/>
  <testcase name="expand(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="expand(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="capacityLessThanZero(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.003"/>
  <testcase name="capacityLessThanZero(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="capacityLessThanZero(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="capacityLessThanZero(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="capacityLessThanZero(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="capacityLessThanZero(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeByteBuffer(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writeByteBuffer(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeByteBuffer(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.004"/>
  <testcase name="writeByteBuffer(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.006"/>
  <testcase name="writeByteBuffer(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeByteBuffer(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="asByteBufferIndexLength(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.003"/>
  <testcase name="asByteBufferIndexLength(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.013"/>
  <testcase name="asByteBufferIndexLength(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.003"/>
  <testcase name="asByteBufferIndexLength(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="asByteBufferIndexLength(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="asByteBufferIndexLength(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="dataBufferContainsByteBufferChanges(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="dataBufferContainsByteBufferChanges(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="dataBufferContainsByteBufferChanges(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="dataBufferContainsByteBufferChanges(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.009"/>
  <testcase name="dataBufferContainsByteBufferChanges(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="dataBufferContainsByteBufferChanges(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="byteBufferContainsDataBufferChanges(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteBufferContainsDataBufferChanges(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteBufferContainsDataBufferChanges(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="byteBufferContainsDataBufferChanges(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteBufferContainsDataBufferChanges(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteBufferContainsDataBufferChanges(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="lastIndexOf(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.031"/>
  <testcase name="lastIndexOf(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="lastIndexOf(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="lastIndexOf(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="lastIndexOf(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="lastIndexOf(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeUtf8StringOutGrowsCapacity(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeUtf8StringOutGrowsCapacity(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writeUtf8StringOutGrowsCapacity(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writeUtf8StringOutGrowsCapacity(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writeUtf8StringOutGrowsCapacity(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeUtf8StringOutGrowsCapacity(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStream(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStream(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStream(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStream(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.026"/>
  <testcase name="inputStream(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="inputStream(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="outputStream(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="outputStream(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="outputStream(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="outputStream(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="outputStream(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="outputStream(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="toStringNullCharset(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.012"/>
  <testcase name="toStringNullCharset(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringNullCharset(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="toStringNullCharset(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringNullCharset(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringNullCharset(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="getByte(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="getByte(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="getByte(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.008"/>
  <testcase name="getByte(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="getByte(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="getByte(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="join(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.003"/>
  <testcase name="join(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="join(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.005"/>
  <testcase name="join(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="join(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="join(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="slice(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="slice(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.007"/>
  <testcase name="slice(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.003"/>
  <testcase name="slice(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="slice(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="slice(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeDataBuffer(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeDataBuffer(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeDataBuffer(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeDataBuffer(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeDataBuffer(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeDataBuffer(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writePositionGreaterThanCapacity(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writePositionGreaterThanCapacity(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writePositionGreaterThanCapacity(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writePositionGreaterThanCapacity(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writePositionGreaterThanCapacity(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writePositionGreaterThanCapacity(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="readPositionSmallerThanZero(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="readPositionSmallerThanZero(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="readPositionSmallerThanZero(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="readPositionSmallerThanZero(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="readPositionSmallerThanZero(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="readPositionSmallerThanZero(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="decreaseCapacityLowReadPosition(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="decreaseCapacityLowReadPosition(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="decreaseCapacityLowReadPosition(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="decreaseCapacityLowReadPosition(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="decreaseCapacityLowReadPosition(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="decreaseCapacityLowReadPosition(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringUtf8(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringUtf8(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="toStringUtf8(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringUtf8(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringUtf8(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="toStringUtf8(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStreamReleaseOnClose(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStreamReleaseOnClose(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStreamReleaseOnClose(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStreamReleaseOnClose(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="inputStreamReleaseOnClose(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="inputStreamReleaseOnClose(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeUtf8String(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeUtf8String(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeUtf8String(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeUtf8String(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeUtf8String(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeUtf8String(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="asByteBuffer(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.005"/>
  <testcase name="asByteBuffer(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="asByteBuffer(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="asByteBuffer(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="asByteBuffer(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="asByteBuffer(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="retainedSlice(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="retainedSlice(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="retainedSlice(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="retainedSlice(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="retainedSlice(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="retainedSlice(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeEmptyString(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeEmptyString(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeEmptyString(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeEmptyString(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeEmptyString(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writeEmptyString(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="readPositionGreaterThanWritePosition(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="readPositionGreaterThanWritePosition(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="readPositionGreaterThanWritePosition(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="readPositionGreaterThanWritePosition(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="readPositionGreaterThanWritePosition(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="readPositionGreaterThanWritePosition(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringSection(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="toStringSection(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="toStringSection(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="toStringSection(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="toStringSection(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="toStringSection(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeNullString(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeNullString(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeNullString(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeNullString(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeNullString(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeNullString(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeMultipleUtf8String(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeMultipleUtf8String(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeMultipleUtf8String(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="writeMultipleUtf8String(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeMultipleUtf8String(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeMultipleUtf8String(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="increaseCapacity(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="increaseCapacity(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="increaseCapacity(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="increaseCapacity(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="increaseCapacity(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="increaseCapacity(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="byteCountsAndPositions(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteCountsAndPositions(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteCountsAndPositions(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteCountsAndPositions(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteCountsAndPositions(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="byteCountsAndPositions(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeAndRead(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeAndRead(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeAndRead(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="writeAndRead(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeAndRead(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="writeAndRead(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="indexOf(String, DataBufferFactory)[1]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.002"/>
  <testcase name="indexOf(String, DataBufferFactory)[2]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="indexOf(String, DataBufferFactory)[3]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="indexOf(String, DataBufferFactory)[4]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.001"/>
  <testcase name="indexOf(String, DataBufferFactory)[5]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <testcase name="indexOf(String, DataBufferFactory)[6]" classname="org.springframework.core.io.buffer.DataBufferTests" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
