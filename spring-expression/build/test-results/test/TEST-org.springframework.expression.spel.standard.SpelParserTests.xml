<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.expression.spel.standard.SpelParserTests" tests="25" skipped="0" failures="0" errors="0" timestamp="2023-03-20T07:37:33" hostname="DESKTOP-VGJP1PJ" time="0.042">
  <properties/>
  <testcase name="positionalInformation()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="theMostBasic()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="numerics()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.002"/>
  <testcase name="booleanOperators_symbolic_spr9614()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="stringLiterals2()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="exceptions()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="arithmeticMultiply1()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="testStringLiterals_DoubleQuotes_spr9620_2()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.002"/>
  <testcase name="valueType()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="generalExpressions()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.008"/>
  <testcase name="stringLiterals()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="token()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.004"/>
  <testcase name="tokenKind()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.002"/>
  <testcase name="testStringLiterals_DoubleQuotes_spr9620()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="whitespace()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="parseMethodsOnNumbers()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="booleanOperators()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="arithmeticPrecedence1()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="arithmeticPrecedence2()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="arithmeticPrecedence3()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="arithmeticPrecedence4()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="arithmeticPrecedence5()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="arithmeticPrecedence6()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <testcase name="arithmeticPlus1()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.0"/>
  <testcase name="arithmeticPlus2()" classname="org.springframework.expression.spel.standard.SpelParserTests" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
